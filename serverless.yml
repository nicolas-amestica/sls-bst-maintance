service: sls-bst-maintance

plugins:
  - serverless-offline
  - serverless-plugin-include-dependencies
  - serverless-api-gateway-caching

custom:
  tableName: "${file(./configuracion/config.${self:provider.stage}.json):TABLE_USUARIOS}-${self:provider.stage}"
  apiGatewayCaching: # DESABILITA EL CACHÉ DE FORMA GLOBAL AL CONSULTAR EL ENDPOINT (DE TODAS FORMAS ES NECESARIO INDICARLOS EN CADA ENDPOINT)
    enabled: false

provider:
  name: aws
  runtime: nodejs12.x
  profile: super-usuario
  stage: dev
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn"] }
  environment:
    TABLE_USUARIOS: ${self:custom.tableName}
    SEED_TOKEN: ${file(./configuracion/config.${self:provider.stage}.json):SEED_TOKEN}
    EXPIRE_TOKEN: ${file(./configuracion/config.${self:provider.stage}.json):SEED_EXPIRE}

  apiKeys:
    - ${file(./configuracion/config.${self:provider.stage}.json):API_KEY}

functions:

  auth:
    handler: lambdas/authorizer/handler.authorizer

  getUsers:
    handler: lambdas/usuarios/listUsers/handler.generico
    events:
      - http:
          path: api/usuarios/listUsers
          method: GET
          private: true
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          cors:
            origin:
              - "*"
            headers:
              - token
              - X-Api-Key

  getUsers2:
    handler: lambdas/usuarios/listUsers2/handler.generico
    events:
      - http:
          path: api/usuarios/listUsers2
          method: GET
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          cors:
            origin:
              - "*"
            headers:
              - token
              - X-Api-Key

  getUserById:
    handler: lambdas/usuarios/listByRut/handler.generico
    events:
      - http:
          path: api/usuarios/listByRut
          method: GET
          private: true
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          request:
            parameters:
              paths:
                id: true
          cors:
            origin:
              - "*"
            headers:
              - token
              - X-Api-Key

  getUserById2:
    handler: lambdas/usuarios/listByRut2/handler.generico
    events:
      - http:
          path: api/usuarios/listByRut2
          method: GET
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          request:
            parameters:
              paths:
                id: true
          cors:
            origin:
              - "*"
            headers:
              - token
              - X-Api-Key

  createUser:
    handler: lambdas/usuarios/createUser/handler.generico
    events:
      - http:
          path: api/usuarios/createUser
          method: POST
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          cors:
            origin:
              - "*"
            headers:
              - token
              - X-Api-Key

  loginUser:
    handler: lambdas/auth/handler.generico
    events:
      - http:
          path: api/auth
          method: POST
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          cors:
            origin:
              - "*"
          headers:
              - X-Api-Key
  
  loginUser2:
    handler: lambdas/auth2/handler.generico
    events:
      - http:
          path: api/auth2
          method: POST
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
            allowCredentials: true

resources:

  Resources:

    UsersDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"
