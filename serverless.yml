service: sls-bst-maintance

plugins:
  - serverless-offline                      # HABILITA TRABAJO LOCAL
  - serverless-plugin-include-dependencies  # EVITAR SUBIR DEPENDENCIAS INESESARIAS
  - serverless-api-gateway-caching          # HABLITAR GESTION DE CACHÉ EN EL API-GATEWAY

custom:
  tableName: "${file(./configuracion/config.${self:provider.stage}.json):TABLE_USUARIOS}-${self:provider.stage}"
  apiGatewayCaching: # DESABILITA EL CACHÉ DE FORMA GLOBAL AL CONSULTAR EL ENDPOINT (DE TODAS FORMAS ES NECESARIO INDICARLOS EN CADA ENDPOINT)
    enabled: false

provider:
  name: aws
  runtime: nodejs12.x
  profile: super-usuario
  stage: dev
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn"] }
  environment:
    TABLE_USUARIOS: ${self:custom.tableName}
    SEED_TOKEN: ${file(./configuracion/config.${self:provider.stage}.json):SEED_TOKEN}
    EXPIRE_TOKEN: ${file(./configuracion/config.${self:provider.stage}.json):SEED_EXPIRE}

  apiKeys:
    - ${file(./configuracion/config.${self:provider.stage}.json):API_KEY}

functions:

  # AUTHORIZATION
  auth:
    description: Autorizador de lambdas.
    handler: lambdas/authorizer/handler.authorizer

  # LOGIN
  login:
    description: Autenticación de usuario.
    handler: lambdas/login/handler.generico
    events:
      - http:
          path: api/auth
          method: POST
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
            allowCredentials: true
  
  # USUARIOS
  getUsers:
    description: Listar usuarios.
    handler: lambdas/usuarios/listUsers/handler.generico
    events:
      - http:
          path: api/usuarios/listUsers
          method: GET
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          cors:
            origin:
              - "*"
            headers:
              - token
              - X-Api-Key

  getUserById:
    description: Listar usuario por ID (RUT).
    handler: lambdas/usuarios/listByRut/handler.generico
    events:
      - http:
          path: api/usuarios/listByRut
          method: GET
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          request:
            parameters:
              paths:
                id: true
          cors:
            origin:
              - "*"
            headers:
              - token
              - X-Api-Key

  createUser:
    description: Crear usuario.
    handler: lambdas/usuarios/createUser/handler.generico
    events:
      - http:
          path: api/usuarios/createUser
          method: POST
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          cors:
            origin:
              - "*"
            headers:
              - Content-Type
              - token
              - X-Api-Key

  updateStatusUser:
    description: Cambiar estado de usuario por ID (RUT).
    handler: lambdas/usuarios/updateStatusUser/handler.generico
    events:
      - http:
          path: api/usuarios/updateStatusUser
          method: POST
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          request:
            parameters:
              paths:
                id: true
          cors:
            origin:
              - "*"
            headers:
              - Content-Type
              - token
              - X-Api-Key

  # INSTANCIAS
  getInstances:
    description: Listar instancias.
    handler: lambdas/Instancias/listInstances/handler.generico
    role: arn:aws:iam::715010718328:role/roleDesarrolladoresFull
    events:
      - http:
          path: api/instancias/listInstances
          method: GET
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          cors:
            origin:
              - "*"
            headers:
              - token
              - X-Api-Key

  getInstanceById:
    description: Listar instancia por arreglo de IDs.
    handler: lambdas/Instancias/listInstanceById/handler.generico
    role: arn:aws:iam::715010718328:role/roleDesarrolladoresFull
    events:
      - http:
          path: api/instancias/listInstanceById
          method: POST
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          request:
            parameters:
              paths:
                id: true
          cors:
            origin:
              - "*"
            headers:
              - Content-Type
              - token
              - X-Api-Key

  powerOffInstance:
    description: Apagar instancia por arreglo de IDs
    handler: lambdas/Instancias/powerOff/handler.generico
    role: arn:aws:iam::715010718328:role/roleDesarrolladoresFull
    events:
      - http:
          path: api/instancias/powerOff
          method: POST
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          request:
            parameters:
              paths:
                id: true
          cors:
            origin:
              - "*"
            headers:
              - Content-Type
              - token
              - X-Api-Key
              
  powerOnInstance:
    description: Encender instancia por arreglo de IDs
    handler: lambdas/Instancias/powerOn/handler.generico
    role: arn:aws:iam::715010718328:role/roleDesarrolladoresFull
    events:
      - http:
          path: api/instancias/powerOn
          method: POST
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          request:
            parameters:
              paths:
                id: true
          cors:
            origin:
              - "*"
            headers:
              - Content-Type
              - token
              - X-Api-Key
  
  describeStatus:
    description: Describe el estado de la instancia por ID
    handler: lambdas/Instancias/describeStatus/handler.generico
    role: arn:aws:iam::715010718328:role/roleDesarrolladoresFull
    events:
      - http:
          path: api/instancias/describeStatus
          method: GET
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          request:
            parameters:
              paths:
                id: true
          cors:
            origin:
              - "*"
            headers:
              - token
              - X-Api-Key

  terminateInstance:
    description: Encender instancia por arreglo de IDs
    handler: lambdas/Instancias/terminateInstance/handler.generico
    role: arn:aws:iam::715010718328:role/roleDesarrolladoresFull
    events:
      - http:
          path: api/instancias/terminateInstance
          method: POST
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          request:
            parameters:
              paths:
                id: true
          cors:
            origin:
              - "*"
            headers:
              - Content-Type
              - token
              - X-Api-Key
    
  rebootInstance:
    description: Encender instancia por arreglo de IDs
    handler: lambdas/Instancias/rebootInstance/handler.generico
    role: arn:aws:iam::715010718328:role/roleDesarrolladoresFull
    events:
      - http:
          path: api/instancias/rebootInstance
          method: POST
          authorizer:
            name: auth
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          private: true
          request:
            parameters:
              paths:
                id: true
          cors:
            origin:
              - "*"
            headers:
              - Content-Type
              - token
              - X-Api-Key

resources:

  Resources:

    UsersDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"